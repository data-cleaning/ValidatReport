[
  {
    "id": "id_kg6dehmsjc",
    "type": "validation",
    "rule": {
      "id": "Rule 12",
      "language": "VTL 1.0",
      "expression": "DS= person-id(identifier),gender(identifier),age-group(identifier)\n/*\n * gender: male, female\n * age-groups: child, adult, senior\n */\nDScalc := DS[calc 1 as \"id\" role \"identifier\", 1 as \"msrcount\" role \"measure\"]\nDScount := DS[keep(id, msrcount, gender, age_groups)][aggregate count(msrcount)][filter msrcount > 1]\nDSr := DScount [keep (id, msrcount)][aggregate count(msrcount)] = 0\n",
      "severity": "information",
      "description": "The combination of sex and age group in the data set is unique, i.e., there do not exist two distinct records in the data set with an identical combination of values for sex and age group."
    },
    "event": {
      "time": "2017-10-24T15:20:49.300Z",
      "actor": "STRUVAL",
      "agent": "Eurostat",
      "trigger": "Jim Statistician"
    },
    "data": {
      "source": [
        "Inhabitants",
        "EU-SILC",
        "Jim",
        "Income"
      ],
      "target": [],
      "description": "synthetic income data"
    },
    "value": "0"
  },
  {
    "id": "id_fqxeavvip2",
    "type": "validation",
    "rule": {
      "id": "Rule 13",
      "language": "validate",
      "expression": "# rule 14\nall(table(gender, age_group) >= 1) & \n  all(c(\"male\", \"female\") %in% gender) &\n  all(c(\"child\",\"adult\",\"senior\") %in% age_group)\n",
      "severity": "warning",
      "description": "Every combination of sex and age group occurs at least once in the data set."
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "R package validate version 0.2.0",
      "agent": "CBS",
      "trigger": "John Statistician"
    },
    "data": {
      "source": [
        "Inhabitants",
        "EU-SILC",
        "Jim",
        "Income"
      ],
      "target": [],
      "description": "synthetic income data"
    },
    "value": "0"
  },
  {
    "id": "id_p42jejn78v",
    "type": "validation",
    "rule": {
      "id": "Rule 4",
      "language": "Estatistik",
      "expression": "DECLARE rc, tmp_age\ntmp_age := EMPTY\n\n  tmp_age := DATASET mat_Rule05lb (person_id = grandchild_of ; age)\n\nIF tmp_age - 28 < age\n THEN rc := 1\nEND\n\n\nRETURN rc",
      "severity": "information",
      "description": "Age of grandparents â€“ 28 >= age of their grandchildren"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "Data Entry System",
      "agent": "Destatis",
      "trigger": "Lucas Statistician"
    },
    "data": {
      "source": [
        "Inhabitants",
        "EU-SILC",
        "John",
        "Income"
      ],
      "target": [],
      "description": "synthetic income data nr2"
    },
    "value": "1"
  },
  {
    "id": "id_e2dgw6g836",
    "type": "validation",
    "rule": {
      "id": "Rule 13",
      "language": "validate",
      "expression": "# rule 14\nall(table(gender, age_group) >= 1) & \n  all(c(\"male\", \"female\") %in% gender) &\n  all(c(\"child\",\"adult\",\"senior\") %in% age_group)\n",
      "severity": "warning",
      "description": "Every combination of sex and age group occurs at least once in the data set."
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "R package validate version 0.2.0",
      "agent": "CBS",
      "trigger": "John Statistician"
    },
    "data": {
      "source": [
        "WC001",
        "WC002",
        "WC003",
        "WC004"
      ],
      "target": [],
      "description": "Record from a EU member state"
    },
    "value": "1"
  },
  {
    "id": "id_4bct4pukfb",
    "type": "validation",
    "rule": {
      "id": "Rule 15",
      "language": "Estatistik",
      "expression": "DECLARE rc, tmp_AnzSst, tmp_such, tmp_level, tmp_sum, tmp_weight, hit\nrc,tmp_sum,hit  := {0,0,0}\n\ntmp_AnzSst := FUNCTION LENGTH (level)\n\nIF tmp_AnzSst IN SEQUENCE  (1,3)\n THEN \n\n  FOR EVERY tmp_level, tmp_weight IN DATASET mat_Rule16 (level, weight )\n\n   IF tmp_AnzSst = 1 AND FUNCTION LENGTH (tmp_level) = 3 AND \n                          FUNCTION PART (tmp_level,1,1) = FUNCTION PART (level,1,1) \n     THEN tmp_sum:= tmp_sum + tmp_weight  \n          hit := 1\n    END\n\n   IF tmp_AnzSst = 3 AND FUNCTION LENGTH (tmp_level) = 5 AND \n                          FUNCTION PART (tmp_level,1,3) = FUNCTION PART (level,1,3) \n     THEN tmp_sum:= tmp_sum + tmp_weight  \n          hit := 1\n    END\n\n END\n\n  \"Check\"\n  IF tmp_sum /= weight AND hit = 1\n   THEN rc := 1\n  END\n\nEND\n\nRETURN rc",
      "severity": "warning",
      "description": "A check on hierarchical aggreggation.\n\n forall k >= 1: w(x1. ... .xk) equals the sum of\n w(x1. ... .xk.i) forall i >= 0"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "Data Entry System",
      "agent": "Destatis",
      "trigger": "Lucas Statistician"
    },
    "data": {
      "source": [
        "Enterprises",
        "Survey_23",
        "SuccesfulStartup",
        "Nr_employees"
      ],
      "target": [],
      "description": "a record on employees of a startup"
    },
    "value": "1"
  },
  {
    "id": "id_idse09p5ze",
    "type": "validation",
    "rule": {
      "id": "Rule 0",
      "language": "validate",
      "expression": "# rule_01:\nhours_worked >= 1 & hours_worked <= 80\n",
      "severity": "warning",
      "description": "Number of hours per week usually worked should be between 1 and 80"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "R package validate version 0.2.0",
      "agent": "CBS",
      "trigger": "John Statistician"
    },
    "data": {
      "source": [
        "Inhabitants",
        "EU-SILC",
        "Jim",
        "Income"
      ],
      "target": [],
      "description": "synthetic income data"
    },
    "value": "1"
  },
  {
    "id": "id_dohn5rvx7v",
    "type": "validation",
    "rule": {
      "id": "Rule 0",
      "language": "validate",
      "expression": "# rule_01:\nhours_worked >= 1 & hours_worked <= 80\n",
      "severity": "warning",
      "description": "Number of hours per week usually worked should be between 1 and 80"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "R package validate version 0.2.0",
      "agent": "CBS",
      "trigger": "John Statistician"
    },
    "data": {
      "source": [
        "Enterprises",
        "Survey_23",
        "SuccesfulStartup",
        "Nr_employees"
      ],
      "target": [],
      "description": "a record on employees of a startup"
    },
    "value": "0"
  },
  {
    "id": "id_y9mi22j0gy",
    "type": "validation",
    "rule": {
      "id": "Rule 3",
      "language": "Estatistik",
      "expression": "(price_t = EMPTY OR price_t_1 = EMPTY OR price_Y_1 = EMPTY)\nOR\nFUNCTION ABSOLUTEVALUE (price_t - price_t_1)  > price_t_1 * 0.5\nOR\nFUNCTION ABSOLUTEVALUE (price_t - price_Y_1)  > price_Y_1 * 0.5",
      "severity": "warning",
      "description": "Price change between the current month and the previous month should not exceed 50% (taking the previous value as 100%).\nThe same must hold for the price change between the current month and the same month last year.",
      "change": "down",
      "explanation": "This value has been checked manually and the exception is statistically correct"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "Data Entry System",
      "agent": "Destatis",
      "trigger": "Lucas Statistician"
    },
    "data": {
      "source": [
        "Inhabitants",
        "EU-SILC",
        "John",
        "Income"
      ],
      "target": [],
      "description": "synthetic income data nr2"
    },
    "value": "1"
  },
  {
    "id": "id_y497yrp96z",
    "type": "validation",
    "rule": {
      "id": "Rule 16",
      "language": "VTL 1.0",
      "expression": "DShousehold=household-id(identifier),members\nDSpersons=person-id(identifier),household-id(identifier) (in the example fields are not correctly defined)\n\nDScount := (DSpersons[calc 1 as \"members\" role \"MEASURE\"][keep (household-id, members)][aggregate count(members)]= \n        DShousehold)[filter members= \"false\"]\nDSr := DScount[calc 1 as \"msr_count\" role \"MEASURE\"][aggregate count(msr_count)] = 0\n\n",
      "severity": "error",
      "description": "The value for no_of_household_members must equal the number of records for each household"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "STRUVAL",
      "agent": "Eurostat",
      "trigger": "Jim Statistician"
    },
    "data": {
      "source": [
        "WC001",
        "WC002",
        "WC003",
        "WC004"
      ],
      "target": [],
      "description": "Record from a EU member state"
    },
    "value": "1"
  },
  {
    "id": "id_gyzt5sckz5",
    "type": "validation",
    "rule": {
      "id": "Rule 7",
      "language": "VTL 1.0",
      "expression": "DS_h= household-id, person-id(identifier),person, year_of_birth\nDS_p= person-id(identifier),person, year_of_birth, gender\n \nDSr:= DS_h#year_of_birth=DS_p#year_of_birth\n",
      "severity": "information",
      "description": "Year of birth in household questionnaire must equal year of birth in individual questionnaire"
    },
    "event": {
      "time": "2017-10-24T15:20:49.301Z",
      "actor": "STRUVAL",
      "agent": "Eurostat",
      "trigger": "Jim Statistician"
    },
    "data": {
      "source": [
        "Enterprises",
        "Survey_23",
        "SuccesfulStartup",
        "Nr_employees"
      ],
      "target": [],
      "description": "a record on employees of a startup"
    },
    "value": "0"
  }
]
